from aiogram import F, Router, Bot
from aiogram.types import Message, CallbackQuery, FSInputFile
from aiogram.enums import ParseMode
from loguru import logger
import os

import app.keyboards as kb
import app.cmd_message as cmd
from app.transcribing import transcribing_aai
from app.etc.check_file_exists import check_any_file_exists
from app.etc.conversion_txt_to_docx import txt_to_docx
from app.handling import GPTResponse

router = Router()


@router.message(F.text == "–°–¥–µ–ª–∞—Ç—å –∫–æ–Ω—Å–ø–µ–∫—Ç")
async def voice_message(message: Message):
    await message.answer(f"–°–∫–∏–Ω—å—Ç–µ –∫–æ–Ω—Å–ø–µ–∫—Ç –ø–æ [—Å—Å—ã–ª–∫–µ](https://111d-5-18-188-83.ngrok-free.app)",
                         ParseMode.MARKDOWN,
                         disable_web_page_preview=True,
                         reply_markup=kb.confirmation)


@router.callback_query(F.data == "confirmation")
async def confirmation_callback(callback: CallbackQuery, bot: Bot):
    try:
        audio = check_any_file_exists("/Users/aleksandrvolzanin/pet_project/site_conspectius/uploads")
    except Exception:
        await callback.message.answer("–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    await callback.message.answer("""
üéß –í–∞—à–µ –∞—É–¥–∏–æ—Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏–Ω—è—Ç–æ –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è. ‚è≥ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ 5-15 –º–∏–Ω—É—Ç. –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à–µ —Ç–µ—Ä–ø–µ–Ω–∏–µ!
                         """)


    transcribing = transcribing_aai(audio)
    print(transcribing)
    ai = GPTResponse()
    conspect = await ai.processing_transcribing(transcribing)
    print(conspect)

    try: 
        txt_to_docx(text=conspect)
        logger.info("–§–∞–π–ª –ø–µ—Ä–µ–∫–æ–Ω–≤–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω –∏–∑ .txt –≤ .docx")
    except Exception as err:
        await callback.message.answer(cmd.error)
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–Ω—Å–ø–µ–∫—Ç–∞: {err}")

    try:
        destination_file_path = "/Users/aleksandrvolzanin/pet_project/CONSPECTIUS/app/received_txt/input_file.docx"
        # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç InputFile
        input_file = FSInputFile(destination_file_path)
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª
        await callback.message.answer_document(input_file, caption="–í–∞—à –∫–æ–Ω—Å–ø–µ–∫—Ç: ")
        logger.info("–§–∞–π–ª —Å–∫–∏–Ω—É—Ç")
        os.remove
    except Exception as err:
        await callback.message.answer(cmd.error)
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Å—ã–ª–∫–µ —Ñ–∞–π–ª–∞: {err}")
